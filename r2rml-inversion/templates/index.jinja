<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>R2RML Test Interface</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css" rel="stylesheet">
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/js/bootstrap.bundle.min.js"></script>
    <style>
        pre {
            background-color: #f8f9fa;
            border: 1px solid #e9ecef;
            border-radius: 0.25rem;
            padding: 1rem;
            white-space: pre-wrap;
            word-wrap: break-word;
        }
        .result-passed {
            color: green !important;
            font-weight: bold;
        }
        .result-failed {
            color: red !important;
            font-weight: bold;
        }
        .table-striped > tbody > tr:nth-of-type(odd) > * {
            --bs-table-accent-bg: var(--bs-table-striped-bg);
            color: var(--bs-table-striped-color);
        }
        .table-striped > tbody > tr:nth-of-type(odd) .result-passed,
        .table-striped > tbody > tr:nth-of-type(odd) .result-failed {
            color: inherit;
        }
        .spinner-container {
            display: flex;
            justify-content: center;
            align-items: center;
            height: 100px;
        }
        .loading-row td {
            text-align: center;
            padding: 10px;
        }
        .loading-row .loading-dots::after {
            content: '.';
            animation: dots 1.5s steps(5, end) infinite;
        }
        @keyframes dots {
            0%, 20% { content: '.'; }
            40% { content: '..'; }
            60% { content: '...'; }
            80%, 100% { content: ''; }
        }
    </style>
</head>
<body>
    <div class="container mt-5">
        <h1 class="mb-4">R2RML Test Interface</h1>
        <div class="row">
            <div class="col-md-6">
                <select id="testSelect" class="form-select mb-3">
                    <option value="">Select a test</option>
                    {% for test in tests %}
                    <option value="{{ test }}">{{ test }}</option>
                    {% endfor %}
                </select>
            </div>
            <div class="col-md-6">
                <select id="dbSelect" class="form-select mb-3">
                    <option value="postgresql">PostgreSQL</option>
                    <option value="mysql">MySQL</option>
                </select>
            </div>
        </div>
        <div class="row mb-3">
            <div class="col">
                <button id="runTestBtn" onclick="runTest()" class="btn btn-primary">Run Test</button>
                <button id="runAllTestsBtn" onclick="runAllTests()" class="btn btn-success">Run All Tests</button>
                <button id="viewMappingBtn" onclick="viewMapping()" class="btn btn-secondary">View Mapping</button>
            </div>
        </div>
        <div id="mappingContent" class="mb-4" style="display: none;">
            <h2>R2RML Mapping</h2>
            <pre><code id="mappingCode"></code></pre>
        </div>
        <div id="results">
            <h2>All Test Results:</h2>
            <div id="spinner" class="spinner-container" style="display: none;">
                <div class="spinner-border text-primary" role="status">
                    <span class="visually-hidden">Loading...</span>
                </div>
            </div>
            <table id="results-table" class="table table-striped" style="display: none;">
                <thead>
                    <tr id="results-header"></tr>
                </thead>
                <tbody id="results-body"></tbody>
            </table>
        </div>
    </div>

    <script>
        function disableButtons() {
            $('#runTestBtn, #runAllTestsBtn, #viewMappingBtn').prop('disabled', true);
        }

        function enableButtons() {
            $('#runTestBtn, #runAllTestsBtn, #viewMappingBtn').prop('disabled', false);
        }

        function runTest() {
            const testId = $('#testSelect').val();
            const dbSystem = $('#dbSelect').val();
            const resultsDiv = $('#results');
            $('#spinner').show();
            $('#results-table').hide();

            disableButtons();

            $.post('/run_test', {
                test_id: testId,
                database_system: dbSystem
            })
            .done(function(response) {
                displayTestResults(response);
            })
            .fail(function(jqXHR, textStatus, errorThrown) {
                resultsDiv.html('<p class="text-danger">Error: ' + textStatus + '</p>');
            })
            .always(function() {
                $('#spinner').hide();
                enableButtons();
            });
        }

        function runAllTests() {
            const dbSystem = $('#dbSelect').val();
            const resultsDiv = $('#results');
            resultsDiv.empty();
            
            const spinnerElement = $('<div id="spinner" class="spinner-container"><div class="spinner-border text-primary" role="status"><span class="visually-hidden">Loading...</span></div></div>');
            const resultsTable = $('<table id="results-table" class="table table-striped" style="display: none;"><thead><tr id="results-header"></tr></thead><tbody id="results-body"></tbody></table>');
            
            resultsDiv.append(spinnerElement);
            resultsDiv.append(resultsTable);

            disableButtons();

            const eventSource = new EventSource(`/run_all_tests?database_system=${dbSystem}`);

            eventSource.onmessage = function(event) {
                const testResult = JSON.parse(event.data);
                
                if (spinnerElement.is(":visible")) {
                    spinnerElement.hide();
                    resultsDiv.prepend('<h2>All Test Results:</h2>');
                    resultsTable.show();
                    // Set the header if it's empty
                    const resultsHeader = $('#results-header');
                    if (resultsHeader.is(":empty")) {
                        let headerHtml = '<th>Test ID</th>';
                        testResult.results[0].forEach(header => {
                            headerHtml += `<th>${header}</th>`;
                        });
                        resultsHeader.html(headerHtml);
                    }
                    // Add the loading row
                    addLoadingRow();
                }

                const rowHtml = generateResultRow(testResult);
                $('#results-body .loading-row').before(rowHtml);
            };

            eventSource.onerror = function(event) {
                console.error('EventSource failed:', event);
                eventSource.close();
                resultsDiv.append('<p class="text-danger">Error: Failed to receive all test results</p>');
                removeLoadingRow();
            };

            eventSource.onopen = function(event) {
                console.log('EventSource connected.');
            };

            eventSource.addEventListener('complete', function(event) {
                console.log('All tests completed');
                eventSource.close();
                enableButtons();
                removeLoadingRow();
            }, false);
        }

        function addLoadingRow() {
            const columnCount = $('#results-header th').length;
            const loadingRow = $('<tr class="loading-row"><td colspan="' + columnCount + '">Loading more results<span class="loading-dots"></span></td></tr>');
            $('#results-body').append(loadingRow);
        }

        function removeLoadingRow() {
            $('#results-body .loading-row').remove();
        }

        function displayTestResults(response) {
            const resultsDiv = $('#results');
            if (response.status === 'success') {
                let resultsHtml = `<h2>Test Results for ${response.test_id}:</h2>`;
                resultsHtml += generateResultTable(response);
                resultsDiv.html(resultsHtml);
            } else {
                let errorHtml = `<h2 class="text-danger">Error in ${response.test_id}:</h2>`;
                errorHtml += '<p>' + response.message + '</p>';
                if (response.traceback) {
                    errorHtml += '<h3>Traceback:</h3>';
                    errorHtml += '<pre>' + response.traceback + '</pre>';
                }
                resultsDiv.html(errorHtml);
            }
        }

        function generateResultRow(response) {
            let rowHtml = `<tr><td>${response.test_id}</td>`;
            response.results.slice(1).forEach(row => {
                row.forEach((cell, index) => {
                    if (index === 4) { // 'result' column
                        rowHtml += `<td class="result-${cell.toLowerCase()}">${cell}</td>`;
                    } else {
                        rowHtml += `<td>${cell}</td>`;
                    }
                });
            });
            rowHtml += '</tr>';
            return rowHtml;
        }

        function generateResultTable(response) {
            let resultsHtml = '<table class="table table-striped">';
            resultsHtml += '<thead><tr>';
            response.results[0].forEach(header => {
                resultsHtml += `<th>${header}</th>`;
            });
            resultsHtml += '</tr></thead><tbody>';
            response.results.slice(1).forEach(row => {
                resultsHtml += '<tr>';
                row.forEach((cell, index) => {
                    if (index === 4) { // 'result' column
                        resultsHtml += `<td class="result-${cell.toLowerCase()}">${cell}</td>`;
                    } else {
                        resultsHtml += `<td>${cell}</td>`;
                    }
                });
                resultsHtml += '</tr>';
            });
            resultsHtml += '</tbody></table>';
            return resultsHtml;
        }

        function viewMapping() {
            const testId = $('#testSelect').val();
            if (!testId) {
                alert('Please select a test first.');
                return;
            }

            $.get('/get_mapping/' + testId)
            .done(function(response) {
                if (response.status === 'success') {
                    $('#mappingCode').text(response.content);
                    $('#mappingContent').show();
                } else {
                    alert('Error: ' + response.message);
                }
            })
            .fail(function(jqXHR, textStatus, errorThrown) {
                alert('Error: ' + textStatus);
            });
        }
    </script>
</body>
</html>